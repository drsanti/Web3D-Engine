"use strict";function _interopDefault(ex){return ex&&"object"==typeof ex&&"default"in ex?ex.default:ex}Object.defineProperty(exports,"__esModule",{value:!0});var THREE=require("three"),CANNON=require("cannon"),GLTFLoader=require("three-gltf-loader"),GLTFLoader__default=_interopDefault(GLTFLoader),OrbitControls=require("threejs-orbit-controls"),threeCss2drender=require("three-css2drender"),Options={engine:{},physics:{enabled:!0,timeStep:1/60,debug:{enabled:!1,color:2250001,offset:.01},solver:{iterations:10,tolerance:1e-6,split:!0},world:{allowSleep:!1,quatNormalizeFast:!0,quatNormalizeSkip:0,gravity:new CANNON.Vec3(0,-10,0),defaultContactMaterial:{contactEquationStiffness:1e8,contactEquationRelaxation:1.5},broadphase:{useBoundingBoxes:!0}}},graphics:{sceneType:"env",useReflection:!0,fog:{color:16772812,near:1,far:100,plane:{enabled:!0,width:1500,height:1500,color:3359795,receiveShadow:!1}},env:{path:"./images/snow"},bkg:{color:1052688,plane:{enabled:!1,width:1500,height:1500,color:1053968,receiveShadow:!1}},models:["./models/scene001.gltf"],camera:{fov:45,near:.1,far:1e3,aspect:window.innerWidth/window.innerHeight,position:{x:30,y:15,z:-30},lookAt:{x:0,y:0,z:0}},renderer:{antialias:!1,alpha:!1,gammaInput:!0,gammaOutput:!0,shadowMap:{enabled:!0,soft:!0,type:THREE.PCFSoftShadowMap}},controls:{enabled:!0,useKeys:!1},directionalLight:{enabled:!0,color:16777164,intensity:1.5,castShadow:!0,position:{x:10,y:30,z:10},shadow:{bias:0,mapSize:{width:1024,height:1024},camera:{visible:!0,near:-55,far:55,top:55,bottom:-55,right:55,left:-55}},helper:{enabled:!1,size:2}},spotLight:{enabled:!1,color:16777215,intensity:5,castShadow:!0,distance:100,decay:2,angle:Math.PI/4,penumbra:.8,position:{x:35,y:50,z:-10},shadow:{bias:0,mapSize:{width:1024,height:1024},camera:{visible:!0,fov:90,near:.5,far:1e3}},helper:{enabled:!0}},pointLight:{enabled:!1,color:16777215,intensity:2,castShadow:!0,distance:50,decay:2,position:{x:3,y:20,z:-5},shadow:{bias:0,mapSize:{width:1024,height:1024},camera:{visible:!0,fov:90,near:.5,far:1e3}},helper:{enabled:!0,size:1,color:13421772}},ambientLight:{enabled:!0,color:16777215,intensity:.7},grids:{enabled:!1,size:40,divisions:40,colorCenterLine:16733695,colorGrid:8947848,opacity:.5,position:{x:0,y:.01,z:0}},axes:{enabled:!1,size:4,position:{x:0,y:.02,z:0}},stats:{enabled:!0,type:0,left:3,top:3}}},Stats=function(){var mode=0,container=document.createElement("div");function addPanel(panel){return container.appendChild(panel.dom),panel}function showPanel(id){for(var i=0;i<container.children.length;i++)container.children[i].style.display=i===id?"block":"none";mode=id}container.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",container.addEventListener("click",function(event){event.preventDefault(),showPanel(++mode%container.children.length)},!1);var beginTime=(performance||Date).now(),prevTime=beginTime,frames=0,fpsPanel=addPanel(new Stats.Panel("FPS","#0af","#001")),msPanel=addPanel(new Stats.Panel("MS","#0f0","#121"));if(self.performance&&self.performance.memory)var memPanel=addPanel(new Stats.Panel("MB","#f0f","#212"));return showPanel(0),{REVISION:16,dom:container,addPanel:addPanel,showPanel:showPanel,begin:function(){beginTime=(performance||Date).now()},end:function(){frames++;var time=(performance||Date).now();if(msPanel.update(time-beginTime,200),time>=prevTime+1e3&&(fpsPanel.update(1e3*frames/(time-prevTime),100),prevTime=time,frames=0,memPanel)){var memory=performance.memory;memPanel.update(memory.usedJSHeapSize/1048576,memory.jsHeapSizeLimit/1048576)}return time},update:function(){beginTime=this.end()},domElement:container,setMode:showPanel}};function Utils(){}function Graphics(options){this.options=options||{},this.reqAnim=void 0,this.cameras=[],this.renderers=[],this.scenes=[],this.controls=[],this.stats=[],this.ambientLights=[],this.pointLights=[],this.spotLights=[],this.directionalLights=[],this.scene=void 0,this.camera=void 0,this.renderer=void 0,this.control=void 0,this.fogPlane=void 0,this.envMap=void 0}Stats.Panel=function(name,fg,bg){var min=1/0,max=0,round=Math.round,PR=round(window.devicePixelRatio||1),WIDTH=80*PR,HEIGHT=48*PR,TEXT_X=3*PR,TEXT_Y=2*PR,GRAPH_X=3*PR,GRAPH_Y=15*PR,GRAPH_WIDTH=74*PR,GRAPH_HEIGHT=30*PR,canvas=document.createElement("canvas");canvas.width=WIDTH,canvas.height=HEIGHT,canvas.style.cssText="width:80px;height:48px";var context=canvas.getContext("2d");return context.font="bold "+9*PR+"px Helvetica,Arial,sans-serif",context.textBaseline="top",context.fillStyle=bg,context.fillRect(0,0,WIDTH,HEIGHT),context.fillStyle=fg,context.fillText(name,TEXT_X,TEXT_Y),context.fillRect(GRAPH_X,GRAPH_Y,GRAPH_WIDTH,GRAPH_HEIGHT),context.fillStyle=bg,context.globalAlpha=.9,context.fillRect(GRAPH_X,GRAPH_Y,GRAPH_WIDTH,GRAPH_HEIGHT),{dom:canvas,update:function(value,maxValue){min=Math.min(min,value),max=Math.max(max,value),context.fillStyle=bg,context.globalAlpha=1,context.fillRect(0,0,WIDTH,GRAPH_Y),context.fillStyle=fg,context.fillText(round(value)+" "+name+" ("+round(min)+"-"+round(max)+")",TEXT_X,TEXT_Y),context.drawImage(canvas,GRAPH_X+PR,GRAPH_Y,GRAPH_WIDTH-PR,GRAPH_HEIGHT,GRAPH_X,GRAPH_Y,GRAPH_WIDTH-PR,GRAPH_HEIGHT),context.fillRect(GRAPH_X+GRAPH_WIDTH-PR,GRAPH_Y,PR,GRAPH_HEIGHT),context.fillStyle=bg,context.globalAlpha=.9,context.fillRect(GRAPH_X+GRAPH_WIDTH-PR,GRAPH_Y,PR,round((1-value/maxValue)*GRAPH_HEIGHT))}}},Utils.VERSION="Utils version 0.0.1",Utils.COLOR={},Utils.COLOR.NORMAL=3355443,Utils.COLOR.PRIMARY=22015,Utils.COLOR.SECONDARY=7829401,Utils.COLOR.INFO=3368703,Utils.COLOR.SUCCESS=3399031,Utils.COLOR.WARNING=16742195,Utils.COLOR.DANGER=16716049,Utils.CAMERA={},Utils.CAMERA.PREFIX="_camera_",Utils.RENDERER={},Utils.RENDERER.PREFIX="_renderer_",Utils.SCENE={},Utils.SCENE.PREFIX="_scene_",Utils.LIGHT={},Utils.LIGHT.PREFIX="_light_",Utils.AMBIENTLIGHT={},Utils.AMBIENTLIGHT.PREFIX="_AmbientLight_",Utils.POINTLIGHT={},Utils.POINTLIGHT.PREFIX="_PointLight_",Utils.SPOTLIGHT={},Utils.SPOTLIGHT.PREFIX="_SpotLight_",Utils.DIRECTIONALLIGHT={},Utils.DIRECTIONALLIGHT.PREFIX="_DirectionalLight_",Utils.GRIDS={},Utils.GRIDS.PREFIX="_grids_",Utils.AXES={},Utils.AXES.PREFIX="_axes_",Utils.HELPER={},Utils.HELPER.PREFIX="_helper_",Utils.CONTROL={},Utils.CONTROL.PREFIX="_control_",Utils.FOGPLANE={},Utils.FOGPLANE.PREFIX="_fogplane_",Utils.CUBETEXTURE={},Utils.CUBETEXTURE.PREFIX="_cubetexture_",Utils.BODYDEBUG={},Utils.BODYDEBUG.PREFIX="_bodydebug_",Utils.COLLIDER={},Utils.COLLIDER.PREFIX="_collider_",Utils.STATIC={},Utils.STATIC.PREFIX="_static_",Utils.DYNAMIC={},Utils.DYNAMIC.PREFIX="_dynamic_",Utils.MESHLABEL={},Utils.MESHLABEL.PREFIX="_meshlabel_",Utils.PHYGROUNDMAT={},Utils.PHYGROUNDMAT.PREFIX="_physicsgroudmat_",Utils.PHYOBJECTMAT={},Utils.PHYOBJECTMAT.PREFIX="_physicsobjectmat_",Utils.hexToCss=function(hex){return"rgb("+(hex>>16)%256+","+(hex>>8)%256+","+(hex>>0)%256+")"},Utils.print=function(message,color,prefix){console.log("%c"+(prefix?prefix+": ":"")+message,"color:"+Utils.hexToCss(color))},Utils.printInfo=function(message){Utils.print(message,Utils.COLOR.INFO)},Utils.printWarning=function(message){Utils.print(message,Utils.COLOR.WARNING)},Utils.printDanger=function(message){Utils.print(message,Utils.COLOR.DANGER)},Utils.printSuccess=function(message){Utils.print(message,Utils.COLOR.SUCCESS)},Utils.printPrimary=function(message){Utils.print(message,Utils.COLOR.PRIMARY)},Utils.printSecondary=function(message){Utils.print(message,Utils.COLOR.SECONDARY)},Utils.generateId=function(prefix){return(prefix?prefix+"_":"")+Math.floor(1e6*Math.random())},Utils.zerosPad=function(value,length){var str=value+"";const nz=length-str.length;for(var i=0;i<nz;i++)str="0"+str;return str},Utils.opts=function(opt,def){return null==opt?def:opt},Utils.getName=function(obj){return("string"==typeof obj?obj:obj.name).toLowerCase()},Utils.isDebugger=function(obj){return Utils.getName(obj).includes(Utils.BODYDEBUG.PREFIX)},Utils.isHelper=function(obj){return Utils.getName(obj).includes(Utils.HELPER.PREFIX)},Utils.isFogPlane=function(obj){return Utils.getName(obj).includes(Utils.FOGPLANE.PREFIX)},Utils.isCollider=function(obj){return Utils.getName(obj).includes(Utils.COLLIDER.PREFIX)},Utils.isStatic=function(obj){return Utils.getName(obj).includes(Utils.STATIC.PREFIX)},Utils.isLight=function(obj){return Utils.getName(obj).includes(Utils.LIGHT.PREFIX)},Utils.isMesh=function(obj){return obj instanceof THREE.Mesh},Utils.isGroup=function(obj){return obj instanceof THREE.Group},Utils.isScene=function(obj){return obj instanceof THREE.Scene},Utils.isFace=function(obj){return Utils.isMesh(obj)&!Utils.isHelper(obj)&!Utils.isFogPlane(obj)&!Utils.isCollider(obj)&!Utils.isLight(obj)},Utils.printMesh=function(mesh){var str="Name:\t"+mesh.name+",\t";str+="Type:\t"+mesh.type+",\t",str+="Parent:\t"+mesh.parent.name+",\t",str+="Children:\t"+mesh.children.length,Utils.printSecondary(str)},Utils.getFileName=function(path){const sp=path.split("/"),name=sp[sp.length-1];if(!name)return;const ext=name.split(".");return ext.length>0?ext[0]:ext},Graphics.prototype.init=function(options,callback){return new Promise((resolve,reject)=>{this.scene=this.createScene(),this.camera=this.createCamera(),this.renderer=this.createRenderer(),document.body.appendChild(this.renderer.domElement),this.options.ambientLight=Utils.opts(this.options.ambientLight,Options.graphics.ambientLight),this.options.ambientLight.enabled&&this.addAmbientLight(this.options.ambientLight),this.options.pointLight=Utils.opts(this.options.pointLight,Options.graphics.pointLight),this.options.pointLight.enabled&&this.addPointLight(this.options.pointLight),this.options.spotLight=Utils.opts(this.options.spotLight,Options.graphics.spotLight),this.options.spotLight.enabled&&this.addSpotLight(this.options.spotLight),this.options.directionalLight=Utils.opts(this.options.directionalLight,Options.graphics.directionalLight),this.options.directionalLight.enabled&&this.addDirectionalLight(this.options.directionalLight),this.options.stats=Utils.opts(this.options.stats,Options.graphics.stats),this.options.stats.enabled&&this.addStats(this.options.stats),this.options.controls=Utils.opts(this.options.controls,Options.graphics.controls),this.options.controls.enabled&&(this.control=this.createControls(this.options.controls)),this.options.sceneType=Utils.opts(this.options.sceneType,Options.graphics.sceneType),this.setSceneType(this.options.sceneType),this.options.grids=Utils.opts(this.options.grids,Options.graphics.grids),this.options.grids.enabled&&this.addGrids(this.options.grids),this.options.axes=Utils.opts(this.options.axes,Options.graphics.axes),this.options.axes.enabled&&this.addAxes(this.options.axes),(options=Utils.opts(options,{})).envPath=Utils.opts(options.envPath,Options.graphics.env.path),options.models=Utils.opts(options.models,Options.graphics.models),options.start=Utils.opts(options.start,Options.graphics.start),options.callback=Utils.opts(options.callback,Options.graphics.callback);const self=this;function _do_resolve_callback(resolve,glTFs,cubeTexture){var ret={Graphics:this,glTFs:glTFs,envMap:cubeTexture};resolve(ret),callback&&callback(ret),options.callback&&(self.callback=options.callback),options.start&&self.start(self.callback)}this.loadCubeTexture(options.envPath,cubeTexture=>{Utils.printInfo('Environment map "'+options.envPath+'" is loaded'),self.envMap=cubeTexture,"env"==this.options.sceneType&&(self.scene.background=cubeTexture);let glTFs=[];if(options.models.length>0){var cnt=0;options.models.forEach(file=>{self.loadGLTF(file,gltf=>{glTFs.push(gltf),Utils.printInfo('glTF model "'+file+'" is loaded'),self.scene.add(gltf.scene),this.options.useReflection=Utils.opts(this.options.useReflection,Options.graphics.useReflection),this.options.useReflection&&self.applyReflectionMap(gltf.scene),++cnt>=options.models.length&&_do_resolve_callback(resolve,glTFs,cubeTexture)})})}else Utils.printWarning("Graphics.init: No model/file is provided"),_do_resolve_callback(resolve,glTFs,cubeTexture)})})},Graphics.prototype.addGrids=function(options){if(this.isGridsAdded())return;(options=options||{}).colorGrid=options.colorGrid?options.colorGrid:options.color;const defOpts=Options.graphics.grids,gridHelper=new THREE.GridHelper(Utils.opts(options.size,defOpts.size),Utils.opts(options.divisions,defOpts.divisions),Utils.opts(options.colorCenterLine,defOpts.colorCenterLine),Utils.opts(options.colorGrid,defOpts.colorGrid));gridHelper.name=Utils.HELPER.PREFIX+Utils.GRIDS.PREFIX,gridHelper.material.opacity=Utils.opts(options.opacity,.5),gridHelper.material.transparent=gridHelper.material.opacity<1,options.position=options.position||{},gridHelper.position.x=Utils.opts(options.position.x,defOpts.position.x),gridHelper.position.y=Utils.opts(options.position.y,defOpts.position.y),gridHelper.position.z=Utils.opts(options.position.z,defOpts.position.z),this.scene.add(gridHelper)},Graphics.prototype.isGridsAdded=function(options){for(var objects=this.getObjects(),i=0;i<objects.length;i++)if(objects[i].name.includes(Utils.HELPER.PREFIX+Utils.GRIDS.PREFIX))return!0;return!1},Graphics.prototype.toggleGrids=function(options){this.isGridsAdded()?this.removeGrids():this.addGrids()},Graphics.prototype.addAxes=function(options){for(var objects=this.getObjects(),i=0;i<objects.length;i++)if(objects[i].name.includes(Utils.HELPER.PREFIX+Utils.AXES.PREFIX))return;options=options||{};const defOpts=Options.graphics.grids,axesHelper=new THREE.AxesHelper(Utils.opts(options.size,defOpts.size));axesHelper.name=Utils.HELPER.PREFIX+Utils.AXES.PREFIX,options.position=options.position||{},axesHelper.position.x=Utils.opts(options.position.x,defOpts.position.x),axesHelper.position.y=Utils.opts(options.position.y,defOpts.position.y),axesHelper.position.z=Utils.opts(options.position.z,defOpts.position.z),this.scene.add(axesHelper)},Graphics.prototype.isAxesAdded=function(options){for(var objects=this.getObjects(),i=0;i<objects.length;i++)if(objects[i].name.includes(Utils.HELPER.PREFIX+Utils.AXES.PREFIX))return!0;return!1},Graphics.prototype.toggleAxes=function(options){this.isAxesAdded()?this.removeAxes():this.addAxes()},Graphics.prototype.removeGrids=function(){var grids=this.getObjectByName(Utils.HELPER.PREFIX+Utils.GRIDS.PREFIX);grids&&grids instanceof THREE.GridHelper&&this.scene.remove(grids),grids=void 0},Graphics.prototype.removeAxes=function(){var axes=this.getObjectByName(Utils.HELPER.PREFIX+Utils.AXES.PREFIX);axes&&axes instanceof THREE.AxesHelper&&this.scene.remove(axes),axes=void 0},Graphics.prototype.createCamera=function(options){options=Utils.opts(options,{});const defOpts=Options.graphics.camera,camera=new THREE.PerspectiveCamera(Utils.opts(options.fov,defOpts.fov),Utils.opts(options.aspect,defOpts.aspect),Utils.opts(options.near,defOpts.near),Utils.opts(options.far,defOpts.far));return camera.name=options.name?options.name:Utils.CAMERA.PREFIX+Utils.zerosPad(this.cameras.length,3),options.position=Utils.opts(options.position,{}),camera.position.set(Utils.opts(options.position.x,defOpts.position.x),Utils.opts(options.position.y,defOpts.position.y),Utils.opts(options.position.z,defOpts.position.z)),options.lookAt=Utils.opts(options.lookAt,{}),camera.lookAt(Utils.opts(options.lookAt.x,defOpts.lookAt.x),Utils.opts(options.lookAt.y,defOpts.lookAt.y),Utils.opts(options.lookAt.z,defOpts.lookAt.z)),this.cameras.push(camera),camera},Graphics.prototype.createControls=function(options){options=Utils.opts(options,{});const control=new OrbitControls(this.camera);control.name=options.name?options.name:Utils.CONTROL.PREFIX+Utils.zerosPad(this.controls.length,3),options.controls=Utils.opts(options.controls,{}),options.controls.useKeys=Utils.opts(options.controls.useKeys,Options.graphics.controls.useKeys),options.controls.useKeys||(control.keys={}),this.control=control,this.controls.push(control)},Graphics.prototype.createScene=function(options){options=Utils.opts(options,{});const defOpts=Options.graphics,scene=new THREE.Scene;scene.name=options.name?options.name:Utils.SCENE.PREFIX+Utils.zerosPad(this.scenes.length,3);Utils.opts(options.sceneType,defOpts.sceneType);return this.scenes.push(scene),scene},Graphics.prototype.createAmbientLight=function(options){options=options||{};const defOpts=Options.graphics.ambientLight,ambientLight=new THREE.AmbientLight(Utils.opts(options.color,16777215));return ambientLight.intensity=Utils.opts(options.intensity,defOpts.intensity),ambientLight.name=Utils.LIGHT.PREFIX+Utils.AMBIENTLIGHT.PREFIX+Utils.zerosPad(this.ambientLights.length,3),ambientLight},Graphics.prototype.addAmbientLight=function(options){options=options||{};const ambientLight=this.createAmbientLight(options);return this.scene.add(ambientLight),this.ambientLights.push(ambientLight),ambientLight},Graphics.prototype.createPointLight=function(options){options=options||{};const defOpts=Options.graphics.pointLight,pointLight=new THREE.PointLight(Utils.opts(options.color,defOpts.color));return pointLight.name=Utils.LIGHT.PREFIX+Utils.POINTLIGHT.PREFIX+Utils.zerosPad(this.pointLights.length,3),pointLight.intensity=Utils.opts(options.intensity,defOpts.intensity),pointLight.castShadow=Utils.opts(options.castShadow,defOpts.castShadow),pointLight.distance=Utils.opts(options.distance,defOpts.distance),pointLight.decay=Utils.opts(options.decay,defOpts.decay),options.position=Utils.opts(options.position,defOpts.position),pointLight.position.copy(new THREE.Vector3(Utils.opts(options.position.x,defOpts.position.x),Utils.opts(options.position.y,defOpts.position.y),Utils.opts(options.position.z,defOpts.position.z))),options.shadow=Utils.opts(options.shadow,defOpts.shadow),pointLight.shadow.bias=Utils.opts(options.shadow.bias,defOpts.shadow.bias),options.shadow.mapSize=Utils.opts(options.shadow.mapSize,defOpts.shadow.mapSize),pointLight.shadow.mapSize.width=Utils.opts(options.shadow.mapSize.width,defOpts.shadow.mapSize.width),pointLight.shadow.mapSize.height=Utils.opts(options.shadow.mapSize.height,defOpts.shadow.mapSize.height),options.shadow.camera=Utils.opts(options.shadow.camera,defOpts.shadow.camera),pointLight.shadow.camera.visible=Utils.opts(options.shadow.camera.visible,defOpts.shadow.camera.visible),pointLight.shadow.camera.Fov=Utils.opts(options.shadow.camera.fov,defOpts.shadow.camera.fov),pointLight.shadow.camera.near=Utils.opts(options.shadow.camera.near,defOpts.shadow.camera.near),pointLight.shadow.camera.far=Utils.opts(options.shadow.camera.far,defOpts.shadow.camera.far),console.log(pointLight),pointLight},Graphics.prototype.createPointLightHelper=function(pointLight,options){const defOpts=Options.graphics.pointLight.helper,pointLightHelper=new THREE.PointLightHelper(pointLight,Utils.opts(options.size,defOpts),Utils.opts(options.color,pointLight.color));return pointLightHelper.name=Utils.HELPER.PREFIX+pointLight.name,pointLightHelper},Graphics.prototype.addPointLight=function(options){options=options||{};const pointLight=this.createPointLight(options);if(this.scene.add(pointLight),options.helper=Utils.opts(options.helper,Options.graphics.pointLight.helper),options.helper.enabled){const pointLightHelper=this.createPointLightHelper(pointLight,options.helper);this.scene.add(pointLightHelper)}return this.pointLights.push(pointLight),pointLight},Graphics.prototype.createSpotLight=function(options){options=options||{};const defOpts=Options.graphics.spotLight,spotLight=new THREE.SpotLight(Utils.opts(options.color,defOpts.color));return spotLight.name=Utils.LIGHT.PREFIX+Utils.SPOTLIGHT.PREFIX+Utils.zerosPad(this.spotLights.length,3),options.position=Utils.opts(options.position,defOpts.position),spotLight.position.copy(new THREE.Vector3(Utils.opts(options.position.x,defOpts.position.x),Utils.opts(options.position.y,defOpts.position.y),Utils.opts(options.position.z,defOpts.position.z))),spotLight.intensity=Utils.opts(options.intensity,defOpts.intensity),spotLight.castShadow=Utils.opts(options.castShadow,defOpts.castShadow),spotLight.distance=Utils.opts(options.distance,defOpts.distance),spotLight.decay=Utils.opts(options.decay,defOpts.decay),spotLight.angle=Utils.opts(options.angle,defOpts.angle),spotLight.penumbra=Utils.opts(options.penumbra,defOpts.penumbra),options.shadow=Utils.opts(options.shadow,defOpts.shadow),spotLight.shadow.bias=Utils.opts(options.shadow.bias,defOpts.shadow.bias),options.shadow.mapSize=Utils.opts(options.shadow.mapSize,defOpts.shadow.mapSize),spotLight.shadow.mapSize.width=Utils.opts(options.shadow.mapSize.width,defOpts.shadow.mapSize.width),spotLight.shadow.mapSize.height=Utils.opts(options.shadow.mapSize.height,defOpts.shadow.mapSize.height),options.shadow.camera=Utils.opts(options.shadow.camera,defOpts.shadow.camera),spotLight.shadow.camera.visible=Utils.opts(options.shadow.camera.visible,defOpts.shadow.camera.visible),spotLight.shadow.camera.Fov=Utils.opts(options.shadow.camera.Fov,defOpts.shadow.camera.fov),spotLight.shadow.camera.near=Utils.opts(options.shadow.camera.near,defOpts.shadow.camera.near),spotLight.shadow.camera.far=Utils.opts(options.shadow.camera.far,defOpts.shadow.camera.far),spotLight},Graphics.prototype.createSpotLightHelper=function(spotLight,options){const spotLightHelper=new THREE.SpotLightHelper(spotLight,Utils.opts(options.color,spotLight.color));return spotLightHelper.name=Utils.HELPER.PREFIX+spotLight.name,spotLightHelper},Graphics.prototype.addSpotLight=function(options){options=Utils.opts(options,Options.graphics.spotLight);const spotLight=this.createSpotLight(options);if(this.scene.add(spotLight),options.helper=Utils.opts(options.helper,Options.graphics.spotLight.helper),options.helper.enabled){const spotLightHelper=this.createSpotLightHelper(spotLight,options.helper);this.scene.add(spotLightHelper)}return this.spotLights.push(spotLight),spotLight},Graphics.prototype.createDirectionalLight=function(options){options=options||{};const defOpts=Options.graphics.directionalLight,directionalLight=new THREE.DirectionalLight(Utils.opts(options.color,defOpts.color));return directionalLight.name=Utils.LIGHT.PREFIX+Utils.DIRECTIONALLIGHT.PREFIX+Utils.zerosPad(this.directionalLights.length,3),options.position=Utils.opts(options.position,defOpts.position),directionalLight.position.copy(new THREE.Vector3(Utils.opts(options.position.x,defOpts.position.x),Utils.opts(options.position.y,defOpts.position.y),Utils.opts(options.position.z,defOpts.position.z))),directionalLight.intensity=Utils.opts(options.intensity,defOpts.intensity),directionalLight.castShadow=Utils.opts(options.castShadow,defOpts.castShadow),options.shadow=Utils.opts(options.shadow,defOpts.shadow),directionalLight.shadow.bias=Utils.opts(options.shadow.bias,defOpts.shadow.bias),options.shadow.mapSize=Utils.opts(options.shadow.mapSize,defOpts.shadow.mapSize),directionalLight.shadow.mapSize.width=Utils.opts(options.shadow.mapSize.width,defOpts.shadow.mapSize.width),directionalLight.shadow.mapSize.height=Utils.opts(options.shadow.mapSize.height,defOpts.shadow.mapSize.height),options.shadow.camera=Utils.opts(options.shadow.camera,defOpts.shadow.camera),directionalLight.shadow.camera.visible=Utils.opts(options.shadow.camera.visible,defOpts.shadow.camera.visible),directionalLight.shadow.camera.near=Utils.opts(options.shadow.camera.near,defOpts.shadow.camera.near),directionalLight.shadow.camera.far=Utils.opts(options.shadow.camera.far,defOpts.shadow.camera.far),directionalLight.shadow.camera.top=Utils.opts(options.shadow.camera.top,options.shadow.camera.top),directionalLight.shadow.camera.bottom=Utils.opts(options.shadow.camera.bottom,options.shadow.camera.bottom),directionalLight.shadow.camera.right=Utils.opts(options.shadow.camera.right,options.shadow.camera.right),directionalLight.shadow.camera.left=Utils.opts(options.shadow.camera.left,options.shadow.camera.left),directionalLight},Graphics.prototype.createDirectionalLightHelper=function(directionalLight,options){const directionalLightHelper=new THREE.DirectionalLightHelper(directionalLight,Utils.opts(options.size,Options.graphics.directionalLight.helper.size),Utils.opts(options.color,directionalLight.color));return directionalLightHelper.name=Utils.HELPER.PREFIX+directionalLight.name,directionalLightHelper},Graphics.prototype.addDirectionalLight=function(options){options=options||{};const directionalLight=this.createDirectionalLight(options);if(this.scene.add(directionalLight),options.helper=Utils.opts(options.helper,Options.graphics.directionalLight.helper),options.helper.enabled){const directionalLightHelper=this.createDirectionalLightHelper(directionalLight,options.helper);this.scene.add(directionalLightHelper);const helper=new THREE.CameraHelper(directionalLight.shadow.camera);this.scene.add(helper)}return this.directionalLights.push(directionalLight),directionalLight},Graphics.prototype.update=function(){this.control&&(this.control.enableDamping||this.control.autoRotate)&&this.control.update(),this.stats.forEach(stats=>{stats.update()}),this.callback&&this.callback(this),this.renderer.render(this.scene,this.camera)},Graphics.prototype.setSceneBackground=function(cubeTexture){this.envMap=cubeTexture,this.scene.background=cubeTexture},Graphics.prototype.addGroundPlane=function(options){this.fogPlane&&(this.scene.remove(this.fogPlane),this.fogPlane=void 0),options=Utils.opts(options,{});const fogPlane=new THREE.Mesh(new THREE.PlaneBufferGeometry(Utils.opts(options.width,1500),Utils.opts(options.height,1500)),new THREE.MeshBasicMaterial({color:Utils.opts(options.color,1052688),depthWrite:!1}));fogPlane.name=Utils.FOGPLANE.PREFIX,fogPlane.rotation.x=-Math.PI/2,fogPlane.position.y=-.05,fogPlane.receiveShadow=Utils.opts(options.receiveShadow,!1),this.scene.add(fogPlane),this.fogPlane=fogPlane},Graphics.prototype.removeGroundPlane=function(){this.scene.remove(this.fogPlane),this.fogPlane=void 0},Graphics.prototype.setSceneType=function(type,options){if("fog"===type){options=Utils.opts(options,{});const fogOpts=Options.graphics.fog,fogColor=new THREE.Color(Utils.opts(options.color,fogOpts.color));this.scene.fog||(this.scene.fog=new THREE.Fog(fogColor)),this.scene.fog.color=fogColor,this.scene.fog.near=Utils.opts(options.near,fogOpts.near),this.scene.fog.far=Utils.opts(options.far,fogOpts.far),this.scene.background=this.scene.fog.color,options.plane=Utils.opts(options.plane,Options.graphics.fog.plane),options.plane.enabled&&this.addGroundPlane(options.plane)}else"fog"!==type&&(this.scene.fog&&(this.scene.fog.near=.1,this.scene.fog.far=0),this.scene.background=new THREE.Color(Options.graphics.bkg.color),this.removeGroundPlane());if("env"===type&&void 0===this.envMap){options=Utils.opts(options,{});const path=Utils.opts(options.path,Options.graphics.env.path),self=this;this.loadCubeTexture(path,cubeMap=>{self.envMap=cubeMap,self.scene.background=cubeMap,options.useReflection=Utils.opts(options.useReflection,Options.graphics.useReflection),options.useReflection&&self.applyReflectionMap(void 0)})}"basic"===type&&(options=Utils.opts(options,{}),this.scene.background=new THREE.Color(Utils.opts(options.color,Options.graphics.bkg.color)),options.plane=Utils.opts(options.plane,Options.graphics.bkg.plane),options.plane.enabled&&this.addGroundPlane(options.plane))},Graphics.prototype.createRenderer=function(options){options=Utils.opts(options,{});const defOpts=Options.graphics.renderer,renderer=new THREE.WebGLRenderer({antialias:Utils.opts(options.antialias,defOpts.antialias),alpha:Utils.opts(options.alpha,defOpts.alpha)});return renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(window.devicePixelRatio),renderer.name=options.name?options.name:Utils.RENDERER.PREFIX+Utils.zerosPad(this.renderers.length,3),renderer.gammaInput=Utils.opts(options.gammaInput,defOpts.gammaInput),renderer.gammaOutput=Utils.opts(options.gammaOutput,defOpts.gammaOutput),options.shadowMap=Utils.opts(options.shadowMap,defOpts.shadowMap),renderer.shadowMap.enabled=Utils.opts(options.shadowMap.enabled,defOpts.shadowMap.enabled),renderer.shadowMap.soft=Utils.opts(options.shadowMap.soft,defOpts.shadowMap.soft),renderer.shadowMap.type=Utils.opts(options.shadowMap.type,defOpts.shadowMap.type),this.renderers.push(renderer),renderer},Graphics.prototype.addStats=function(options){options=options||{};const stats=new Stats;stats.showPanel(Utils.opts(options.type,0)),document.body.appendChild(stats.dom);const left=Utils.opts(options.left,0),top=Utils.opts(options.top,0);return stats.dom.style.cssText="position:absolute;left:"+left+"px;top:"+top+"px;cursor:pointer;opacity:0.5;z-index:10000",this.stats.push(stats),this},Graphics.prototype.applyReflectionMap=function(target){var meshes=[],scene=void 0===target?this.scene:target;return target instanceof THREE.Mesh?meshes.push(child):scene.traverse(child=>{child instanceof THREE.Mesh&&Utils.isFace(child)&&meshes.push(child)}),void 0===this.envMap?this.loadCubeTexture(void 0,cubeMap=>{this.envMap=cubeMap,meshes.forEach(child=>{child.material.envMap=this.envMap,child.material.needsUpdate=!0})}):meshes.forEach(child=>{child.material.envMap=this.envMap,child.material.needsUpdate=!0}),meshes=void 0,this},Graphics.prototype.removeReflectionMap=function(target){var meshes=[],scene=void 0===target?this.scene:target;target instanceof THREE.Mesh?meshes.push(child):scene.traverse(child=>{child instanceof THREE.Mesh&&Utils.isFace(child)&&meshes.push(child)}),meshes.forEach(child=>{child.material.envMap=void 0,child.material.needsUpdate=!0}),meshes=void 0},Graphics.prototype.loadGLTF=function(path,callback){return new Promise((resolve,reject)=>{const loader=new GLTFLoader;loader.crossOrigin="anonymous";const meshes=[];loader.load(path,function(gltf){gltf.scene.name=Utils.SCENE.PREFIX+Utils.getFileName(path),gltf.scene.traverse(function(child){child instanceof THREE.Mesh&&child.parent instanceof THREE.Scene?meshes.push(child):child instanceof THREE.Group&&child.traverse(function(c){meshes.push(c)})});for(var i=0;i<meshes.length;i++){const mesh=meshes[i];mesh.receiveShadow=!0,mesh.castShadow=!0}resolve(gltf),callback&&callback(gltf)})})},Graphics.prototype.loadCubeTexture=function(path,callback){return new Promise((resolve,reject)=>{void 0===path&&(path=Options.graphics.env.path),path+="/"!==path[path.length-1]?"/":"";const loader=(new THREE.CubeTextureLoader).setPath(path);loader.crossOrigin="anonymous";loader.load(["posx.jpg","negx.jpg","posy.jpg","negy.jpg","posz.jpg","negz.jpg"],cubeTexture=>{cubeTexture.format=THREE.RGBAFormat;var ss=path.split("/");cubeTexture.name=Utils.CUBETEXTURE.PREFIX+ss[ss.length-2],resolve(cubeTexture),callback&&callback(cubeTexture)},xhr=>{},err=>{reject("Error: The CubeTexture "+path+" cannot be downloaded!")})})},Graphics.prototype.loadTexture=function(path,callback){},Graphics.prototype.addAxesToMesh=function(mesh,size){if(mesh.children){var added=!1;for(let i=0;i<mesh.children.length;i++)if(mesh.children[i]instanceof THREE.LineSegments){added=!0;break}if(!added){size=Utils.opts(size,2);var axes=new THREE.AxesHelper(size);axes.scale.x=size/mesh.scale.x,axes.scale.y=size/mesh.scale.y,axes.scale.z=size/mesh.scale.z,axes.name=Utils.HELPER.PREFIX+Utils.AXES.PREFIX+mesh.name,mesh.add(axes)}return this}},Graphics.prototype.addAxesToAllMeshes=function(size){const self=this;return size=Utils.opts(size,2),this.scene.traverse(mesh=>{mesh instanceof THREE.Mesh&&mesh.parent instanceof THREE.Scene&&self.addAxesToMesh(mesh,size)}),this},Graphics.prototype.removeAxesFromMesh=function(mesh){var axes=void 0;for(let i=0;i<mesh.children.length;i++)if(mesh.children[i]instanceof THREE.LineSegments){axes=mesh.children[i];break}return axes&&mesh.remove(axes),this},Graphics.prototype.removeAxesFromAllMeshes=function(){const self=this;return this.scene.traverse(mesh=>{mesh instanceof THREE.Mesh&&self.removeAxesFromMesh(mesh)}),this},Graphics.prototype.getMeshes=function(){const meshes=[];return this.scene.traverse(child=>{(child instanceof THREE.Mesh||child instanceof THREE.Group)&&(!(child.parent instanceof THREE.Scene)||Utils.isHelper(child)||Utils.isLight(child)||Utils.isDebugger(child)||Utils.isFogPlane(child)||meshes.push(child))}),meshes},Graphics.prototype.getMeshByName=function(name){for(var meshes=this.getMeshes(),target=name.toLowerCase(),i=0;i<meshes.length;i++){var mesh=meshes[i];if(mesh.name.toLowerCase()===target&&(mesh instanceof THREE.Mesh||mesh instanceof THREE.Group))return mesh}Utils.printWarning('Graphics.getMeshByName: The mesh/group "'+name+'" cannot be found')},Graphics.prototype.getMeshesFromScene=function(scene){const _scene=scene||this.scene,meshes=[];return _scene.traverse(child=>{(child instanceof THREE.Mesh||child instanceof THREE.Group)&&(!(child.parent instanceof THREE.Scene)||Utils.isHelper(child)||Utils.isLight(child)||Utils.isDebugger(child)||Utils.isFogPlane(child)||meshes.push(child))}),meshes},Graphics.prototype.getObjects=function(){var objects=[];return this.scene.traverse(obj=>{objects.push(obj)}),objects},Graphics.prototype.getObjectByName=function(name){for(var meshes=this.getObjects(),target=name.toLowerCase(),i=0;i<meshes.length;i++){var mesh=meshes[i];if(mesh.name.toLowerCase()===target)return mesh}Utils.printWarning('Graphics.getObjectByName: The object "'+name+'" cannot be found')},Graphics.prototype.getScenes=function(){const scenes=[];return this.scene.traverse(child=>{child instanceof THREE.Scene&&scenes.push(child)}),scenes},Graphics.prototype.getSceneByName=function(name){const scenes=this.getScenes();for(var target=name.toLowerCase(),i=0;i<scenes.length;i++)if(scenes[i].name.toLowerCase()===target&&child instanceof THREE.Scene)return scenes[i];Utils.printWarning('Graphics.getSceneByName: The scene "'+name+'" cannot be found')},Graphics.prototype.getParentScene=function(){const scenes=this.getScenes();for(var i=0;i<scenes.length;i++)if(!scenes[i].parent)return scenes[i]},Graphics.prototype.getMainScene=function(){return this.getParentScene()},Graphics.prototype.getChildScenes=function(){const childScenes=[],mainScane=this.getParentScene(),scenes=this.getScenes();for(var i=0;i<scenes.length;i++)scenes[i].parent===mainScane&&childScenes.push(scenes[i]);return childScenes},Graphics.prototype.getSubScenes=function(){return this.getChildScenes()},Graphics.prototype.clearScene=function(scene){if(scene&&scene instanceof THREE.Scene){for(;scene.children.length>0;)this.clearScene(scene.children[0]),scene.remove(scene.children[0]);scene.geometry&&scene.geometry.dispose(),scene.material&&scene.material.dispose(),scene.texture&&scene.texture.dispose()}},Graphics.prototype.printScene=function(scene){scene=scene||this.scene;var colors=["#000000","#005be5","#9403bc","#01914b","#915501","#3f0191","#917901"];scene.traverse(child=>{for(var str="",p=child,i=0;p;)p=p.parent,str+="   ",i++;console.log("%c"+str+"-> "+i+") name: "+child.name+"\ttype: "+child.type+"\tnc: "+child.children.length,"color:"+colors[i])})};class BodyDebug{constructor(graphics,physics,options){options=options||{},this.graphics=graphics,this.physics=physics,this.scene=new THREE.Scene,this.scene.name=Utils.SCENE.PREFIX+Utils.BODYDEBUG.PREFIX,this.world=physics.world,this.graphics.scene.add(this.scene),this.visibled=!0,this._meshes=[],this._material=new THREE.MeshBasicMaterial({color:options.color||13421568,wireframe:!0}),this._sphereGeometry=new THREE.SphereGeometry(1),this._boxGeometry=new THREE.BoxGeometry(1,1,1),this._planeGeometry=new THREE.PlaneGeometry(10,10,10,10),this._cylinderGeometry=new THREE.CylinderGeometry(1,1,10,10),this.tmpVec0=new CANNON.Vec3,this.tmpVec1=new CANNON.Vec3,this.tmpVec2=new CANNON.Vec3,this.tmpQuat0=new CANNON.Vec3}getPrefix(){return Utils.HELPER.PREFIX+Utils.BODYDEBUG.PREFIX}update(){for(var bodies=this.world.bodies,meshes=this._meshes,shapeWorldPosition=this.tmpVec0,shapeWorldQuaternion=this.tmpQuat0,meshIndex=0,i=0;i!==bodies.length;i++)for(var body=bodies[i],j=0;j!==body.shapes.length;j++){var shape=body.shapes[j];this._updateMesh(meshIndex,shape),(mesh=meshes[meshIndex])&&(body.quaternion.vmult(body.shapeOffsets[j],shapeWorldPosition),body.position.vadd(shapeWorldPosition,shapeWorldPosition),body.quaternion.mult(body.shapeOrientations[j],shapeWorldQuaternion),mesh.position.copy(shapeWorldPosition),mesh.quaternion.copy(shapeWorldQuaternion)),meshIndex++}for(i=meshIndex;i<meshes.length;i++){var mesh;(mesh=meshes[i])&&this.scene.remove(mesh)}return meshes.length=meshIndex,this}_updateMesh(index,shape){var mesh=this._meshes[index];this._typeMatch(mesh,shape)||(mesh&&this.scene.remove(mesh),mesh=this._meshes[index]=this._createMesh(shape)),this._scaleMesh(mesh,shape)}_typeMatch(mesh,shape){if(!mesh)return!1;var geo=mesh.geometry;return geo instanceof THREE.SphereGeometry&&shape instanceof CANNON.Sphere||geo instanceof THREE.BoxGeometry&&shape instanceof CANNON.Box||geo instanceof THREE.PlaneGeometry&&shape instanceof CANNON.Plane||geo.id===shape.geometryId&&shape instanceof CANNON.ConvexPolyhedron||geo.id===shape.geometryId&&shape instanceof CANNON.Trimesh||geo.id===shape.geometryId&&shape instanceof CANNON.Heightfield}_createMesh(shape){var mesh,material=this._material,typeName="";switch(shape.type){case CANNON.Shape.types.SPHERE:mesh=new THREE.Mesh(this._sphereGeometry,material),typeName="sphere";break;case CANNON.Shape.types.BOX:mesh=new THREE.Mesh(this._boxGeometry,material),typeName="box";break;case CANNON.Shape.types.PLANE:mesh=new THREE.Mesh(this._planeGeometry,material),typeName="plane";break;case CANNON.Shape.types.CONVEXPOLYHEDRON:typeName="convexpolyhedron";for(var geo=new THREE.Geometry,i=0;i<shape.vertices.length;i++){var v=shape.vertices[i];geo.vertices.push(new THREE.Vector3(v.x,v.y,v.z))}for(i=0;i<shape.faces.length;i++)for(var face=shape.faces[i],a=face[0],j=1;j<face.length-1;j++){var b=face[j],c=face[j+1];geo.faces.push(new THREE.Face3(a,b,c))}geo.computeBoundingSphere(),geo.computeFaceNormals(),mesh=new THREE.Mesh(geo,material),shape.geometryId=geo.id;break;case CANNON.Shape.types.TRIMESH:typeName="trimesh";var geometry=new THREE.Geometry,v0=this.tmpVec0,v1=this.tmpVec1,v2=this.tmpVec2;for(i=0;i<shape.indices.length/3;i++){shape.getTriangleVertices(i,v0,v1,v2),geometry.vertices.push(new THREE.Vector3(v0.x,v0.y,v0.z),new THREE.Vector3(v1.x,v1.y,v1.z),new THREE.Vector3(v2.x,v2.y,v2.z));j=geometry.vertices.length-3;geometry.faces.push(new THREE.Face3(j,j+1,j+2))}geometry.computeBoundingSphere(),geometry.computeFaceNormals(),mesh=new THREE.Mesh(geometry,material),shape.geometryId=geometry.id;break;case CANNON.Shape.types.HEIGHTFIELD:typeName="heightfield";geometry=new THREE.Geometry,v0=this.tmpVec0,v1=this.tmpVec1,v2=this.tmpVec2;for(var xi=0;xi<shape.data.length-1;xi++)for(var yi=0;yi<shape.data[xi].length-1;yi++)for(var k=0;k<2;k++){shape.getConvexTrianglePillar(xi,yi,0===k),v0.copy(shape.pillarConvex.vertices[0]),v1.copy(shape.pillarConvex.vertices[1]),v2.copy(shape.pillarConvex.vertices[2]),v0.vadd(shape.pillarOffset,v0),v1.vadd(shape.pillarOffset,v1),v2.vadd(shape.pillarOffset,v2),geometry.vertices.push(new THREE.Vector3(v0.x,v0.y,v0.z),new THREE.Vector3(v1.x,v1.y,v1.z),new THREE.Vector3(v2.x,v2.y,v2.z));i=geometry.vertices.length-3;geometry.faces.push(new THREE.Face3(i,i+1,i+2))}geometry.computeBoundingSphere(),geometry.computeFaceNormals(),mesh=new THREE.Mesh(geometry,material),shape.geometryId=geometry.id}return mesh&&(mesh.name=this.getPrefix()+typeName+"_"+Utils.generateId(),this.scene.add(mesh)),mesh}_scaleMesh(mesh,shape){switch(shape.type){case CANNON.Shape.types.SPHERE:var radius=shape.radius;mesh.scale.set(radius,radius,radius);break;case CANNON.Shape.types.BOX:mesh.scale.copy(shape.halfExtents),mesh.scale.multiplyScalar(2);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:mesh.scale.set(1,1,1);break;case CANNON.Shape.types.TRIMESH:mesh.scale.copy(shape.scale);break;case CANNON.Shape.types.HEIGHTFIELD:mesh.scale.set(1,1,1)}}setVisible(visible){this.physics.options.useDebug=visible;const self=this;return this.visibled=!0===visible||!1===visible?visible:this.visibled,this.scene.traverse(mesh=>{mesh instanceof THREE.Mesh&&mesh.name.includes(this.getPrefix())&&(mesh.visible=self.visibled)}),self.visibled}hide(){return this.setVisible(!1)}show(){return this.setVisible(!0)}toggleVisible(){return this.visibled=!this.visibled,this.setVisible(this.visibled),this.visibled}toggle(){return this.toggleVisible()}}function Physics(graphics,options){this.options=options||{},this.graphics=graphics,this.world=void 0,this.bodyDebug=void 0}Physics.prototype.init=function(){this.options=Utils.opts(this.options,{});const defOpts=Options.physics;this.options.enabled=Utils.opts(this.options.enabled,defOpts.enabled),this.options.timeStep=Utils.opts(this.options.timeStep,defOpts.timeStep),this.options.debug=Utils.opts(this.options.debug,{}),this.options.debug.enabled=Utils.opts(this.options.debug.enabled,defOpts.debug.enabled),this.options.debug.color=Utils.opts(this.options.debug.color,defOpts.debug.color),this.options.debug.offset=Utils.opts(this.options.debug.offset,defOpts.debug.offset),this.options.world=Utils.opts(this.options.world,{}),this.options.world.gravity=Utils.opts(this.options.world.gravity,defOpts.world.gravity),this.options.world.allowSleep=Utils.opts(this.options.worldallowSleep,defOpts.world.allowSleep),this.options.world.quatNormalizeFast=Utils.opts(this.options.worldallowSleep,defOpts.world.quatNormalizeFast),this.options.world.quatNormalizeSkip=Utils.opts(this.options.worldallowSleep,defOpts.world.quatNormalizeSkip),this.world=new CANNON.World,this.world.allowSleep=this.options.world.allowSleep,this.world.gravity=this.options.world.gravity,this.world.quatNormalizeFast=this.options.world.quatNormalizeFast,this.world.quatNormalizeSkip=this.options.world.quatNormalizeSkip,this.options.world.broadphase=Utils.opts(this.options.world.broadphase,{}),this.options.world.broadphase.useBoundingBoxes=Utils.opts(this.options.world.broadphase.useBoundingBoxes,defOpts.world.broadphase.useBoundingBoxes),this.world.broadphase=new CANNON.NaiveBroadphase,this.world.broadphase.useBoundingBoxes=this.options.world.broadphase.useBoundingBoxes,this.options.world.defaultContactMaterial=Utils.opts(this.options.world.defaultContactMaterial,{}),this.options.world.defaultContactMaterial.contactEquationStiffness=Utils.opts(this.options.world.defaultContactMaterial.contactEquationStiffness,defOpts.world.defaultContactMaterial.contactEquationStiffness),this.options.world.defaultContactMaterial.contactEquationRelaxation=Utils.opts(this.options.world.defaultContactMaterial.contactEquationRelaxation,defOpts.world.defaultContactMaterial.contactEquationRelaxation),this.world.defaultContactMaterial.contactEquationStiffness=this.options.world.defaultContactMaterial.contactEquationStiffness,this.world.defaultContactMaterial.contactEquationRelaxation=this.options.world.defaultContactMaterial.contactEquationRelaxation,this.options.solver=Utils.opts(this.options.solver,{}),this.options.solver.iterations=Utils.opts(this.options.solver.iterations,defOpts.solver.iterations),this.options.solver.tolerance=Utils.opts(this.options.solver.tolerance,defOpts.solver.tolerance),this.options.solver.split=Utils.opts(this.options.solver.split,defOpts.solver.split);const solver=new CANNON.GSSolver;return this.options.solver.split?this.world.solver=new CANNON.SplitSolver(solver):this.world.solver=solver,this.enabled=this.options.enabled,this.timeStep=this.options.timeStep,this.gravity=this.options.world.gravity,this.bodyDebug=new BodyDebug(this.graphics,this,{color:this.options.debug.color}),this},Physics.prototype.update=function(dt_ms){if(!1===this.enabled)return this;if(dt_ms=void 0===dt_ms?1/60:dt_ms,"dt"===this.timeStep){var dts=dt_ms/1e3;dts>.2&&(Utils.printWarning("The dt="+dts.toFixed(3)+" > "+.2.toFixed(3)+", changed to "+(1/60).toFixed(3)),dts=1/60),this.world.step(dts)}else this.world.step(this.timeStep);var removedBodies=[];if(this.world.bodies.forEach(body=>{body.threemesh&&(body.threemesh.position.copy(body.position),body.threemesh.quaternion.copy(body.quaternion),body.position.y<-100&&removedBodies.push(body))}),this.options.debug.enabled&&this.bodyDebug.update(),removedBodies.length>0){for(var target_scene=null,i=0;i<this.graphics.scene.children.length;i++){var c=this.graphics.scene.children[i];if(c instanceof THREE.Scene){target_scene=c;break}}target_scene||(target_scene=this.graphics.scene),removedBodies.forEach(body=>{for(var objs=[],i=0;i<body.threemesh.children.length;i++)objs.push(body.threemesh.children[i]);objs.forEach(o=>{body.threemesh.remove(o)}),objs=void 0,target_scene.remove(body.threemesh),body.threemes=void 0,Utils.printWarning("The "+body.threemesh.name+" is removed from the scene"),this.world.remove(body),body=void 0})}},Physics.prototype.start=function(){this.enabled=this.options.enabled=!0},Physics.prototype.stop=function(){this.enabled=this.options.enabled=!1},Physics.prototype.enebleProfiling=function(enabled){this.world.doProfiling=enabled},Physics.prototype.getProfiling=function(){return this.world.profile},Physics.prototype.getBodies=function(){return this.world.bodies},Physics.prototype.getBodiesFromWorld=function(){return this.world.bodies},Physics.prototype.getBodyByMeshName=function(name){var targets=[],bodies=this.world.bodies;for(let i=0;i<bodies.length;i++){const body=bodies[i];body.threemesh.name.toLowerCase()===name.toLowerCase()&&targets.push(body)}return targets.length>1&&console.log("getBodyByMeshName: Found + "+targets.length+" bodies. Only the first body is returned"),targets[0]},Physics.prototype.changeBodyToStatic=function(body){return body.type=CANNON.Body.STATIC,body.mass=0,body.updateMassProperties(),body.aabbNeedsUpdate=!0,body},Physics.prototype.changeBodyToDynamic=function(body,mass){return body.type=CANNON.Body.DYNAMIC,body.mass=mass||(mesh.scale.x+mesh.scale.y+mesh.scale.z)/3,body.updateMassProperties(),body.aabbNeedsUpdate=!0,body},Physics.prototype.createBoxShape=function(mesh){const offset=this.options.debug.offset,halfExtents=new CANNON.Vec3(mesh.scale.x+offset,mesh.scale.y+offset,mesh.scale.z+offset);return new CANNON.Box(halfExtents)},Physics.prototype.createBoxBody=function(child,mass){const shape=this.createBoxShape(child),body=new CANNON.Body({mass:mass});return body.addShape(shape),body.quaternion.copy(child.quaternion),body.position.copy(child.position),body.threemesh=child,body},Physics.prototype.createPlaneShape=function(mesh){const offset=this.options.debug.offset,halfExtents=new CANNON.Vec3(mesh.scale.x+offset,.05+offset,mesh.scale.z+offset);return new CANNON.Box(halfExtents)},Physics.prototype.createPlaneBody=function(child,mass){const shape=this.createPlaneShape(child),body=new CANNON.Body({mass:mass});return body.addShape(shape),body.quaternion.copy(child.quaternion),body.position.copy(child.position),body.threemesh=child,body},Physics.prototype.createSphereShape=function(mesh){const offset=this.options.debug.offset,halfExtents=mesh.scale.x+3*offset;return new CANNON.Sphere(halfExtents)},Physics.prototype.createSphereBody=function(child,mass){const shape=this.createSphereShape(child),body=new CANNON.Body({mass:mass});return body.addShape(shape),body.quaternion.copy(child.quaternion),body.position.copy(child.position),body.threemesh=child,body},Physics.prototype.createCylinderShape=function(child){const offset=this.options.debug.offset,radiusTop=child.scale.x,radiusBottom=radiusTop,height=2*child.scale.y,cylinderShape=new CANNON.Cylinder(radiusTop+offset,radiusBottom+offset,height+offset,16);var q=new CANNON.Quaternion;return q.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),cylinderShape.transformAllPoints(new CANNON.Vec3,q),cylinderShape},Physics.prototype.createCylinderBody=function(child,mass){const shape=this.createCylinderShape(child),body=new CANNON.Body({mass:mass});return body.addShape(shape),body.quaternion.copy(child.quaternion),body.position.copy(child.position),body.threemesh=child,body},Physics.prototype.createConeShape=function(child){const offset=this.options.debug.offset,radiusBottom=child.scale.x,height=2*child.scale.y,coneShape=new CANNON.Cylinder(.001+offset,radiusBottom+offset,height+offset,16);var q=new CANNON.Quaternion;return q.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),coneShape.transformAllPoints(new CANNON.Vec3,q),coneShape},Physics.prototype.createConeBody=function(child,mass){const shape=this.createConeShape(child),body=new CANNON.Body({mass:mass});return body.addShape(shape),body.quaternion.copy(child.quaternion),body.position.copy(child.position),body.threemesh=child,body},Physics.prototype.createTorusShape=function(child){const offset=this.options.debug.offset,radiusTop=1.25*child.scale.x,radiusBottom=radiusTop,height=.5*child.scale.y,torusShape=new CANNON.Cylinder(radiusTop+offset,radiusBottom+offset,height+offset,16);var q=new CANNON.Quaternion;return q.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),torusShape.transformAllPoints(new CANNON.Vec3,q),torusShape},Physics.prototype.createTorusBody=function(child,mass){const shape=this.createTorusShape(child),body=new CANNON.Body({mass:mass});return body.addShape(shape),body.quaternion.copy(child.quaternion),body.position.copy(child.position),body.threemesh=child,body},Physics.prototype.createShapeFromMesh=function(mesh){const name=mesh.name.toLowerCase();return name.includes("cube")||name.includes("box")?this.createBoxShape(mesh):name.includes("plane")?this.createPlaneShape(mesh):name.includes("ball")||name.includes("sphere")||name.includes("icosphere")||name.includes("icosahedron")?this.createSphereShape(mesh):name.includes("cylinder")?this.createCylinderShape(mesh):name.includes("cone")?this.createConeShape(mesh):name.includes("torus")?this.createTorusShape(mesh):void 0},Physics.prototype.createBodyFromMesh=function(mesh){const name=mesh.name.toLowerCase(),mass=name.includes("static")?0:(mesh.scale.x+mesh.scale.y+mesh.scale.z)/3;return name.includes("cube")||name.includes("box")?this.createBoxBody(mesh,mass):name.includes("plane")?this.createPlaneBody(mesh,mass):name.includes("ball")||name.includes("sphere")||name.includes("icosphere")||name.includes("icosahedron")?this.createSphereBody(mesh,mass):name.includes("cylinder")?this.createCylinderBody(mesh,mass):name.includes("cone")?this.createConeBody(mesh,mass):name.includes("torus")?this.createTorusBody(mesh,mass):void 0},Physics.prototype.createBodiesFromScene=function(scene){console.group('%cCreate Bodies From "'+scene.name+'"',"color:#33AA33");const self=this;var body=void 0,created=!1,cnt=0;return scene.traverse(mesh=>{mesh instanceof THREE.Group?(body=self.createBodyFromMesh(mesh),created=!0):mesh instanceof THREE.Mesh&&mesh.parent instanceof THREE.Scene&&(body=self.createBodyFromMesh(mesh),created=!0),created&&(body&&(self.world.add(body),console.log("%c"+ ++cnt+") Rigid-body of "+mesh.type+' "'+body.threemesh.name+'" is created',"color:#339922")),created=!1)}),console.groupEnd(),this},Physics.prototype.showDebug=function(){this.options.debug.enabled=!0,this.bodyDebug.show()},Physics.prototype.hideDebug=function(){this.options.debug.enabled=!1,this.bodyDebug.hide()},Physics.prototype.toggleDebug=function(){this.options.debug.enabled=this.bodyDebug.toggle()},Physics.prototype.createGroundMaterial=function(friction,restitution){var groundMaterial=new CANNON.Material(Utils.PHYGROUNDMAT.PREFIX),groundContactMaterial=new CANNON.ContactMaterial(groundMaterial,groundMaterial,{friction:null!=friction?friction:.4,restitution:null!=restitution?restitution:0});return this.world.addContactMaterial(groundContactMaterial),groundMaterial},Physics.prototype.createObjectMaterial=function(friction,restitution,groundMaterial){var objectMaterial=new CANNON.Material(Utils.PHYOBJECTMAT.PREFIX),objectContactMaterial=new CANNON.ContactMaterial(groundMaterial,objectMaterial,{friction:null!=friction?friction:0,restitution:null!=restitution?restitution:.9});return this.world.addContactMaterial(objectContactMaterial),objectMaterial},Physics.prototype.clearWorld=function(){for(var bodies=[],i=0;i<this.world.bodies.length;i++)bodies.push(this.world.bodies[i]);for(i=0;i<bodies.length;i++)this.world.remove(bodies[i])};class KeyEvent{constructor(key){this.down=!1,this.key=key,this.keyCode=void 0,this.target=void 0,this.shift=!1,this.ctrl=!1,this.alt=!1,this.repeat=!1,this.timeOld=performance.now(),this.timeNew=0,this.timeDif=0,this.timeSum=0}}class Keyboard{constructor(callback,options){this.options=options||{},this.downTicks=0,this.callback=callback||null,this.event=new KeyEvent(""),this.keyDownList=[],document.addEventListener("keydown",event=>{var added=!1;for(let i=0;i<this.keyDownList.length;i++)if(this.keyDownList[i].key===event.key){added=!0;break}if(!added){var keyEvt=new KeyEvent(event.key);_updateParams(keyEvt,event,!0),this.keyDownList.push(keyEvt)}this.callback&&(_updateParams(this.event,event,!0),this.callback(this.event))}),document.addEventListener("keyup",event=>{this.downTicks=0;var idx=-1;for(let i=0;i<this.keyDownList.length;i++)if(this.keyDownList[i].key===event.key){idx=i;break}idx>=0&&this.keyDownList.splice(idx,1),this.callback&&(_updateParams(this.event,event,!1),this.callback(this.event))})}setCallback(callback){this.callback=callback}getKeyDown(key,time){for(let i=0;i<this.keyDownList.length;i++){var keyEvt=this.keyDownList[i];if(keyEvt.key===key){if(0==this.downTicks)return this.downTicks++,!0;if(time){var holdDownTime=Number(performance.now()-keyEvt.timeNew);return Number(holdDownTime)>Number(time)&&(keyEvt.timeNew=performance.now(),!0)}return!0}}return!1}}function _updateParams(target,event,isDown){target.down=isDown,target.key=event.key,target.keyCode=event.keyCode,target.shift=event.shiftKey,target.ctrl=event.ctrlKey,target.alt=event.altKey,target.repeat=event.repeat,target.target=event.target,target.timeOld=target.timeNew,target.timeNew=performance.now(),target.timeDif=isDown?target.timeNew-target.timeOld:0,target.timeSum=isDown?target.timeSum+target.timeDif:0}class LabelRenderer{constructor(graphics){this.graphics=graphics,this.visibled=!1,this.labels=[],this.initLabelRender()}static get NAME_PREFIX(){return Utils.MESHLABEL.PREFIX}static get LABEL_CLASS(){return"object_label"}initLabelRender(){this.renderer=new threeCss2drender.CSS2DRenderer,this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.domElement.style.position="absolute",this.renderer.domElement.style.top="0",this.renderer.domElement.style.pointerEvents="none",this.renderer.domElement.style.position="absolute",document.body.appendChild(this.renderer.domElement)}getLabel(mesh){const NAME=LabelRenderer.NAME_PREFIX+mesh.name;for(var i=0;i<mesh.children.length;i++)if(mesh.children[i].name===NAME)return mesh.children[i]}addLabel(mesh,desiredName){if(this.getLabel(mesh))return;const NAME=LabelRenderer.NAME_PREFIX+mesh.name;var text=document.createElement("div");text.className=LabelRenderer.LABEL_CLASS,text.textContent=desiredName||mesh.name,text.textContent=""===text.textContent?"No Name":text.textContent;var label=new threeCss2drender.CSS2DObject(text);return label.name=NAME,label.position.copy(new THREE.Vector3(0,0,0)),label.translateY(1),mesh.add(label),this.labels.push(label),label}removeLabel(mesh){const label=this.getLabel(mesh);if(!label)return;mesh.remove(label);const NAME=LabelRenderer.NAME_PREFIX+mesh.name,lbls=[];for(var i=0;i<this.labels.length;i++)this.labels[i].name!=NAME&&lbls.push(this.labels[i]);return this.labels=lbls,this.labels}getMeshes(){const meshes=[];return this.graphics.scene.traverse(function(c){(c instanceof THREE.Mesh||c instanceof THREE.Group)&&c.parent instanceof THREE.Scene&&meshes.push(c)}),meshes}addLabelToObjects(){const meshes=this.getMeshes();for(var i=0;i<meshes.length;i++){var s=meshes[i].name.toLowerCase();s.includes(Utils.HELPER.PREFIX)||s.includes(Utils.FOGPLANE.PREFIX)||this.addLabel(meshes[i])}return meshes}show(){return this.addLabelToObjects(),this.visibled=!0,this.visibled}hide(){return this.removeLabelFromObjects(),this.visibled=!1,this.visibled}toggle(){return this.visibled=!this.visibled,this.visibled?this.show():this.hide(),this.visibled}removeLabelFromObjects(){const meshes=this.getMeshes();for(var i=0;i<meshes.length;i++)this.removeLabel(meshes[i]);return meshes}updateLabel(mesh,text){const label=this.getLabel(mesh);if(label)return label.element.innerHTML=text,label;this._print_label_not_found(mesh)}setLabelClass(mesh,className){const label=this.getLabel(mesh);if(label)return label.element.className=className,label;this._print_label_not_found(mesh)}addLabelClass(mesh,className){const label=this.getLabel(mesh);if(label)return label.element.classList.add(className),label;this._print_label_not_found(mesh)}setLabelPosition(mesh,position){const label=this.getLabel(mesh);if(label)return label.position.copy(position),label;this._print_label_not_found(mesh)}_print_label_not_found(mesh){}}class RayCast{constructor(graphics,physics){this.graphics=graphics,this.physics=physics,this.callback=null,this.meshes=[],this.raycaster=new THREE.Raycaster,this.mousePosition=new THREE.Vector2,window.addEventListener("mousemove",function(event){this.mousePosition.x=+event.clientX/this.graphics.renderer.domElement.clientWidth*2-1,this.mousePosition.y=-event.clientY/this.graphics.renderer.domElement.clientHeight*2+1}.bind(this),!1)}doRaycast(){this.updateScene(),this.meshes.length<1&&(this.meshes=this.getMeshesFromScene());var targets=[];if(this.meshes.length>1){this.raycaster.setFromCamera(this.mousePosition,this.graphics.camera);let intersects=this.raycaster.intersectObjects(this.meshes);for(let i=0;i<intersects.length;i++){const obj=intersects[i].object;obj.name.includes(Utils.HELPER.PREFIX)||obj.name.includes(Utils.BODYDEBUG.PREFIX)||(obj.parent instanceof THREE.Group?targets.push({mesh:obj.parent,intersect:intersects[i],ray:this.raycaster.ray}):targets.push({mesh:obj,intersect:intersects[i],ray:this.raycaster.ray}))}}return targets}updateScene(){this.meshes=this.getMeshesFromScene()}getMeshesFromScene(scene){const _scene=scene||this.graphics.scene;var meshes=[];return _scene.traverse(c=>{c instanceof THREE.Mesh&&c.name&&meshes.push(c)}),meshes}getMeshesFromWorld(world){const _world=world||this.physics.world,meshes=[];return _world.bodies.forEach(body=>{body.threemesh.traverse(c=>{c instanceof THREE.Mesh&&c.name&&meshes.push(c)})}),meshes}}class AssetLoader{constructor(graphics,physics){this.graphics=graphics,this.physics=physics}load(model,callback){var self=this;return new Promise((resolve,reject)=>{console.group("%cAssetLoader.load","color:#22aa55");const loader=new GLTFLoader__default;loader.crossOrigin="anonymous",loader.load(model,gltf=>{Utils.print("The "+model+" is loaded","#22aa55");const colliders=[];var actor=void 0,cnt=0;console.group("%cProcessing Asset Model","color:#5588aa"),gltf.scene.traverse(child=>{(child instanceof THREE.Mesh||child instanceof THREE.Group)&&child.parent instanceof THREE.Scene&&(child.name.toLowerCase().includes("collider")?(colliders.push(child),Utils.printSuccess(++cnt+') Collider.name "'+child.name+'"')):(child.name.toLowerCase().includes("actor")||child.name.toLowerCase().includes("character"))&&((actor=child).children.forEach(c=>{c.castShadow=!0}),Utils.printInfo('Actor.name "'+child.name+'"')))}),this.graphics.options.useReflection&&this.graphics.applyReflectionMap(actor),(!actor||colliders.length<1)&&Utils.printDanger("No actor or colliders are found in the "+model);const body=new CANNON.Body({mass:2});body.threemesh=actor,body.threemesh.name=actor.name,colliders.forEach(collider=>{collider.receiveShadow=!1,collider.castShadow=!1,collider.material=null;var shape=self.physics.createShapeFromMesh(collider),v2=collider.position.clone().sub(actor.position);body.addShape(shape,v2)}),body.position.copy(actor.position),body.quaternion.copy(actor.quaternion),self.graphics.scene.add(actor),self.physics.world.addBody(body),console.groupEnd(),resolve({body:body,mesh:actor,colliders:colliders}),callback&&callback({body:body,mesh:actor,colliders:colliders})})})}}function EngineCore(options){Utils.printInfo(EngineCore.VERSION),this.options=options||{},this.defaultOptions=Options,this.callback=void 0,this.reqAnim=void 0,this.services=[],this.properties={frameCount:0,timing:{deltaTime:1/60,currentTime:0,previousTime:0,rocessingTime:0},graphics:{processingTime:0},physics:{processingTime:0}},this.graphics=void 0,this.physics=void 0,this.keyboard=void 0,this.labelRenderer=void 0,this.raycaster=void 0,this.assetLoader=void 0}EngineCore.VERSION="EngineCore version 1.0.2",EngineCore.prototype.initPlugins=function(){this.keyboard||(this.keyboard=new Keyboard),this.labelRenderer||(this.labelRenderer=new LabelRenderer(this.graphics)),this.raycaster||(this.raycaster=new RayCast(this.graphics,this.physics)),this.assetLoader||(this.assetLoader=new AssetLoader(this.graphics,this.physics))},EngineCore.prototype.initEvents=function(){window.addEventListener("resize",function(){this.graphics.cameras.forEach(camera=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix()}),this.graphics.renderers.forEach(renderer=>{renderer.setSize(window.innerWidth,window.innerHeight)}),this.labelRenderer&&this.labelRenderer.renderer.setSize(window.innerWidth,window.innerHeight)}.bind(this),!1)},EngineCore.prototype.init=function(options,callback){return new Promise((resolve,reject)=>{var init_options=options||{},g_options=Utils.opts(this.options.graphics,{});this.graphics=new Graphics(g_options);var p_options=Utils.opts(this.options.physics,{});this.physics=new Physics(this.graphics,p_options),this.graphics.init(Utils.opts(init_options,{})).then(params=>{this.physics.init(Utils.opts(init_options.physics,{}));for(var i=0;i<params.glTFs.length;i++)this.physics.createBodiesFromScene(params.glTFs[i].scene);this.initPlugins(),this.initEvents();var ret={glTFs:params.glTFs,envMap:params.envMap,Graphics:this.graphics,Physics:this.physics,Enging:this};resolve(ret),callback&&callback(ret)})})},EngineCore.prototype.getMilliseconds=function(){return performance.now()||Date.now()},EngineCore.prototype.updateGraphics=function(){const t0=this.getMilliseconds();return this.graphics.update(),this.labelRenderer&&this.labelRenderer.labels.length>0&&this.labelRenderer.renderer.render(this.graphics.scene,this.graphics.camera),this.getMilliseconds()-t0},EngineCore.prototype.updatePhysics=function(dt_ms){const t0=this.getMilliseconds();return this.physics.update(dt_ms),this.getMilliseconds(dt_ms)-t0},EngineCore.prototype.update=function(callback){this.reqAnim=void 0,this.reqAnim=requestAnimationFrame(this.update.bind(this)),this.properties.timing.currentTime=this.getMilliseconds(),this.properties.timing.deltaTime=this.properties.timing.currentTime-this.properties.timing.previousTime,this.properties.physics.processingTime=this.updatePhysics(this.properties.timing.deltaTime),this.properties.graphics.processingTime=this.updateGraphics(),this.properties.frameCount++,this.callback&&this.callback(this.properties),this.properties.timing.previousTime=this.properties.timing.currentTime},EngineCore.prototype.start=function(callback){this.callback=callback,void 0===this.reqAnim&&(this.reqAnim=requestAnimationFrame(this.update.bind(this)))},EngineCore.prototype.stop=function(){void 0!==this.reqAnim&&(cancelAnimationFrame(this.reqAnim),this.reqAnim=void 0)},exports.THREE=THREE,exports.CANNON=CANNON,exports.default=EngineCore,exports.EngineCore=EngineCore,exports.Utils=Utils;